name: Build and Deploy PlaceCheck

on:
  push:
    branches: [ main ]
    paths:
      - 'PlaceCheck.Backend/**'
      - 'PlaceCheck.Worker/**'
  pull_request:
    branches: [ main ]

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      backend_version: ${{ steps.get_version.outputs.backend_version }}
      worker_version: ${{ steps.get_version.outputs.worker_version }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}
      
      - name: Load versions
        id: get_version
        run: |
          # Load Backend version
          if [ -f "PlaceCheck.Backend/.env" ]; then
            source PlaceCheck.Backend/.env
            echo "backend_version=${IMAGE_VERSION}" >> $GITHUB_OUTPUT
            echo "backend_repo=${REPO_NAME}" >> $GITHUB_OUTPUT
          fi
          
          # Load Worker version
          if [ -f "PlaceCheck.Worker/.env" ]; then
            source PlaceCheck.Worker/.env
            echo "worker_version=${IMAGE_VERSION}" >> $GITHUB_OUTPUT
            echo "worker_repo=${REPO_NAME}" >> $GITHUB_OUTPUT
          fi

      - name: Increment patch version on main
        if: github.ref == 'refs/heads/main'
        run: |
          # Update Backend version if changed
          if git diff --name-only HEAD^ HEAD | grep -q "^PlaceCheck.Backend/"; then
            cd PlaceCheck.Backend
            CURRENT_VERSION=$(grep IMAGE_VERSION .env | cut -d'=' -f2)
            NEW_VERSION="v$(echo ${CURRENT_VERSION#v} | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')"
            sed -i "s/IMAGE_VERSION=.*/IMAGE_VERSION=$NEW_VERSION/" .env
            cd ..
          fi
          
          # Update Worker version if changed
          if git diff --name-only HEAD^ HEAD | grep -q "^PlaceCheck.Worker/"; then
            cd PlaceCheck.Worker
            CURRENT_VERSION=$(grep IMAGE_VERSION .env | cut -d'=' -f2)
            NEW_VERSION="v$(echo ${CURRENT_VERSION#v} | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')"
            sed -i "s/IMAGE_VERSION=.*/IMAGE_VERSION=$NEW_VERSION/" .env
            cd ..
          fi
          
      - name: Commit version changes
        if: github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add "PlaceCheck.Backend/.env" "PlaceCheck.Worker/.env"
          git commit -m "Bump version [skip ci]" || echo "No changes to commit"
          git push

  build-and-push:
    needs: version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: backend
            path: PlaceCheck.Backend
            dockerfile_path: PlaceCheck.Backend/PlaceCheck.WebApi/Dockerfile
          - service: worker
            path: PlaceCheck.Worker
            dockerfile_path: PlaceCheck.Worker/PlaceCheck.Worker/Dockerfile
    
    steps:
      - uses: actions/checkout@v3

      - name: Load service configuration
        id: config
        run: |
          cd ${{ matrix.path }}
          source .env
         

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.dockerfile_path }}
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ${{ steps.config.outputs.image }}:${{ steps.config.outputs.version }}
            ${{ steps.config.outputs.image }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max